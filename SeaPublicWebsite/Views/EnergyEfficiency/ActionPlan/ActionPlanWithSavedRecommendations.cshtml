@using GovUkDesignSystem
@using GovUkDesignSystem.GovUkDesignSystemComponents
@using SeaPublicWebsite.BusinessLogic.Models.Enums
@using SeaPublicWebsite.Models.EnergyEfficiency
@model SeaPublicWebsite.Models.EnergyEfficiency.ActionPlanViewModel;
@using Microsoft.AspNetCore.Mvc.Localization
@inject IHtmlLocalizer<SharedResources> SharedLocalizer

@{
    Layout = Model.IsPdf ? "_PdfLayout" : "_Layout";
}

@section BeforeMain {
    @if (!Model.IsPdf)
    {
        await Html.RenderPartialAsync("ActionPlan/Partials/_ActionPlanBeforeMainLinks", Model);
    }
}

<div class="govuk-grid-row">
<div class="govuk-grid-column-full">
    <h1 class="govuk-heading-xl">
        @SharedLocalizer["YourActionPlanTitleString"]
    </h1>

    <p class="govuk-body">
        @{
            var count = Model.GetSavedRecommendations().Count;
        }
        @(count == 1 ? @SharedLocalizer["SummaryOfSavingsAndCostsForSingleRecommendationString"] : @SharedLocalizer["SummaryOfSavingsAndCostsForMultipleRecommendationsString", count])
    </p>

    <div class="govuk-!-padding-left-4 sea-total-savings govuk-!-margin-bottom-6">
        <h2 class="govuk-heading-s govuk-!-margin-0">@SharedLocalizer["You could save up to"]</h2>
        <span class="govuk-heading-l sea-total-savings-text">@Model.GetTotalSavingText()</span>
    </div>
    <div class="govuk-grid-row govuk-!-margin-bottom-4">
        <div class="govuk-grid-column-one-half">
            <div class="govuk-!-padding-left-4 sea-total-installation-cost">
                <h2 class="govuk-heading-s govuk-!-margin-0">@SharedLocalizer["The total cost of the improvements could be"]</h2>
                <span class="govuk-heading-l">@Model.GetTotalInstallationCostText()</span>
            </div>
        </div>
    </div>

@await Html.GovUkDetails(new DetailsViewModel
       {
           SummaryText = "How did we calculate these figures?",
           Html = @<text>
                      @SharedLocalizer["CostsAndSavingsBasedOnStandardAssessmentProcedureString", "https://www.gov.uk/guidance/standard-assessment-procedure"]
                   </text>
       })

<div class="sea-action-plan-margin-right sea-saved-recommendations-table sea-saved-recommendations-table-desktop-hide">
    @await Html.GovUkTable(new TableGovUkViewModel
           {
               Classes = "govuk-!-margin-bottom-9",
               Head = new(),
               Rows = Model.GetSavedRecommendations().Select(recommendation => new TableRowViewModel
               {
                   Row = new List<TableCellViewModel>
                   {
                       new()
                       {
                           Classes = "govuk-!-padding-top-4",
                           Html = @<text>
                                      <p class="govuk-body govuk-!-margin-bottom-1 govuk-!-font-weight-bold">
                                          @(recommendation.Title)
                                      </p>
                                      <p class="govuk-body-s govuk-!-margin-bottom-0">
                                          @(recommendation.Summary)
                                      </p>
                                      <p>
                                          @SharedLocalizer["Typical savings per year"]: @Model.GetSavingText(recommendation)
                                      </p>
                                      <p>
                                          @SharedLocalizer["Typical costs"]: @Model.GetInstallationCostText(recommendation)
                                      </p>
                                      <a class="govuk-link"
                                         href="@Model.GetUrlWithPrefix(Url.Action("Recommendation_Get", new {id = (int) recommendation.Key, reference = Model.PropertyData.Reference, fromActionPlan = true}))">
                                          @SharedLocalizer["Revisit recommendation"]
                                      </a>
                                   </text>
                       }
                   }
               }).ToList()
           })
</div>

<div class="sea-action-plan-margin-right sea-saved-recommendations-table sea-saved-recommendations-table-mobile-hide">
    @await Html.GovUkTable(new TableGovUkViewModel
           {
               Classes = "govuk-!-margin-bottom-9",
               Head = new List<TableCellViewModel>
               {
                   new()
                   {
                       Text = @SharedLocalizer["Recommendation"].Value
                   },
                   new()
                   {
                       Text = @SharedLocalizer["Typical savings per year"].Value
                   },
                   new()
                   {
                       Classes = "govuk-!-padding-right-0",
                       Text = @SharedLocalizer["Typical costs"].Value
                   },
                   new()
               },
               Rows = Model.GetSavedRecommendations().Select(recommendation => new TableRowViewModel
               {
                   Row = new List<TableCellViewModel>
                   {
                       new()
                       {
                           Classes = "govuk-!-padding-top-4 sea-saved-recommendations-table-headers",
                           Html = @<text>
                                      <p class="govuk-body govuk-!-margin-bottom-1 govuk-!-font-weight-bold">
                                          @(recommendation.Title)
                                      </p>
                                      <p class="govuk-body-s govuk-!-margin-bottom-0">
                                          @(recommendation.Summary)
                                      </p>
                                   </text>
                       },
                       new()
                       {
                           Classes = "govuk-!-padding-top-4 sea-saved-recommendations-table-headers",
                           Text = Model.GetSavingText(recommendation)
                       },
                       new()
                       {
                           Classes = "govuk-!-padding-top-4 sea-saved-recommendations-table-headers",
                           Text = Model.GetInstallationCostText(recommendation)
                       },
                       new()
                       {
                           Classes = "sea-saved-recommendations-table-headers",
                           Html = @<a class="govuk-link" href="@Model.GetUrlWithPrefix(Url.Action("Recommendation_Get", new {id = (int) recommendation.Key, reference = Model.PropertyData.Reference, fromActionPlan = true}))">
                                      @SharedLocalizer["Revisit recommendation"]
                                  </a>
                       }
                   }
               }).ToList()
           })
</div>

<p class="govuk-body">
    @SharedLocalizer["Next we have steps to help you action these recommendations."]
</p>

<h2 class="govuk-heading-l govuk-!-margin-bottom-3 govuk-!-margin-top-7">
    @SharedLocalizer["1. Find out if you can apply for support"]
</h2>
@{ await Html.RenderPartialAsync("ActionPlan/Partials/_AvailableSchemesOrGrants", Model); }

<h2 class="govuk-heading-l govuk-!-margin-bottom-3 govuk-!-margin-top-7">
    @SharedLocalizer["2. Consult with a qualified installer"]
</h2>
<p class="govuk-body">
    @SharedLocalizer["We recommend consulting with a qualified installer to confirm what changes you can make to your property."]
</p>
<p class="govuk-body">
    @SharedLocalizer["GetHelpFindingInstallerOnMCSWebsiteString", "https://mcscertified.com/find-an-installer/"]
</p>
<p class="govuk-body">
    @SharedLocalizer["HelpFindingQualifiedInstallerOnTrustMarkWebsiteString", "https://www.trustmark.org.uk/"]
</p>

@if (Model.GetDecideLaterRecommendations().Any())
{
    <h2 class="govuk-heading-l govuk-!-margin-bottom-3 govuk-!-margin-top-7">
        @SharedLocalizer["Research improvements you are unsure about"]
    </h2>
    await Html.RenderPartialAsync("ActionPlan/Partials/_ImprovementsUnsureAbout", Model);
}

@{ await Html.RenderPartialAsync("ActionPlan/Partials/_DiscardedRecommendations", Model); }

<h2 class="govuk-heading-l govuk-!-margin-bottom-3 govuk-!-margin-top-7">
    @(Model.GetDecideLaterRecommendations().Any() ? "4." : "3.") @SharedLocalizer["Other ways to save energy"]
</h2>

<p class="govuk-body">
    @SharedLocalizer["If you’d like to do more to improve the energy efficiency of your home, consider the following:"]
</p>

<ul class="govuk-list govuk-list--bullet">
    <li>
        @SharedLocalizer["VisitTheHelpForHouseholdsWebsiteString", "https://helpforhouseholds.campaign.gov.uk/help-with-your-bills/energy-saving-advice/"]
    </li>
    <li>@SharedLocalizer["WhenBuyingNewAppliancesUpgradeEnergyLabelsString", "https://energylabel.org.uk/"]</li>
    @if (Model.PropertyData?.HasOutdoorSpace != HasOutdoorSpace.No)
    {
        <li>@SharedLocalizer["InstallHeatPumpCheckIfHomeSuitableString", "https://www.heat-pump-check.service.gov.uk/"]</li>
    }
    @if (Model.PropertyData?.YearBuilt == YearBuilt.Pre1930)
    {
        <li>@SharedLocalizer["VisitHistoricEnglandForHistoricBuildingInformationString", "https://historicengland.org.uk/advice/your-home/energy-efficiency/"]</li>
    }
</ul>

@{
    await Html.RenderPartialAsync("ActionPlan/Partials/_ReturnToActionPlan", new ReturnToActionPlanViewModel
    {
        Reference = Model.PropertyData.Reference,
        EmailAddress = Model.EmailAddress,
        EmailSent = Model.EmailSent,
        IsPdf = Model.IsPdf
    });
}
</div>
</div>