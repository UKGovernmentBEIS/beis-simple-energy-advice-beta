@using GovUkDesignSystem
@using GovUkDesignSystem.GovUkDesignSystemComponents
@using GovUkDesignSystem.Helpers
@using SeaPublicWebsite.Helpers
@using SeaPublicWebsite.Models.EnergyEfficiency.QuestionOptions
@model SeaPublicWebsite.DataModels.UserDataModel
@{
    ViewBag.Title = "Your answers";
}

@section BeforeMain {
    @Html.GovUkBackLink(new BackLinkViewModel
    {
        Text = "Back",
        Href = @Url.Action("Temperature_Get", "EnergyEfficiency", new {reference = Model.Reference}),

        // Note: some of the "Back" links in this journey can't use the default browser behaviour
        //  so we should control all of them explicitly
        OverrideWithJavascript = false
    })
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <h1 class="govuk-heading-l">
            Check your answers
        </h1>
        <div class="govuk-hint">
            Please review the information we have gathered. You can still change your answers if anything looks wrong.
        </div>
    
        <dl class="govuk-summary-list">
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key govuk-!-width-one-quarter">
                    Building type
                </dt>
                <dd class="govuk-summary-list__value govuk-!-width-one-half">
                    @(Model.PropertyType == PropertyType.House ? Model.HouseType?.GetCheckboxLabelText() : null)
                    @(Model.PropertyType == PropertyType.Bungalow ? Model.BungalowType?.GetCheckboxLabelText() : null)
                    @(Model.PropertyType == PropertyType.ApartmentFlatOrMaisonette ? Model.FlatType?.GetCheckboxLabelText() : null)
                    @(Model.PropertyType?.GetCheckboxLabelText())
                </dd>
                <dd class="govuk-summary-list__actions govuk-!-width-one-quarter">
                    <a class="govuk-link" href="@Url.Action("PropertyType_Get", "EnergyEfficiency", new {reference = Model.Reference, change = true})">
                        Change<span class="govuk-visually-hidden"> address</span>
                    </a>
                </dd>
            </div>
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key govuk-!-width-one-quarter">
                    Year home was built
                </dt>
                <dd class="govuk-summary-list__value govuk-!-width-one-half">
                    @(Model.YearBuilt?.ToString() ?? "I'm not sure")
                </dd>
                <dd class="govuk-summary-list__actions govuk-!-width-one-quarter">
                    <a class="govuk-link" href="@Url.Action("HomeAge_Get", "EnergyEfficiency", new {reference = Model.Reference, change = true})">
                        Change<span class="govuk-visually-hidden"> home type</span>
                    </a>
                </dd>
            </div>
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key govuk-!-width-one-quarter">
                    Wall type 
                </dt>
                <dd class="govuk-summary-list__value govuk-!-width-one-half">
                    @(Model.WallConstruction?.GetCheckboxLabelText())
                    @if (Model.WallConstruction == WallConstruction.DoNotKnow)
                    {
                        if (Model?.Epc?.WallConstruction != null || !Model.YearBuilt.HasValue &&  Model?.Epc?.ConstructionAgeBand != null)
                        {
                            if (UserDataHelper.HasCavityWalls(Model))
                            {
                                <p class="govuk-body-s sea-assumed-answer govuk-!-padding-top-2">
                                    Based on your Energy Performance Certificate, we will assume that you have @(UserDataHelper.HasInsulatedCavityWalls(Model) ? "insulated" : "uninsulated") cavity walls
                                </p>
                            }
                            else if (UserDataHelper.HasSolidWalls(Model))
                            {
                                <p class="govuk-body-s sea-assumed-answer govuk-!-padding-top-2">
                                    Based on your Energy Performance Certificate, we will assume that you have @(UserDataHelper.HasInsulatedSolidWalls(Model) ? "insulated" : "uninsulated") solid walls
                                </p>
                            }
                        }
                        else if (Model.YearBuilt.HasValue)
                        {
                            if (UserDataHelper.HasCavityWalls(Model))
                            {
                                <p class="govuk-body-s sea-assumed-answer govuk-!-padding-top-2">
                                    Based on your type of property, we will assume that you have @(UserDataHelper.HasInsulatedCavityWalls(Model) ? "insulated" : "uninsulated") cavity walls
                                </p>
                            }
                            else if (UserDataHelper.HasSolidWalls(Model))
                            {
                                <p class="govuk-body-s sea-assumed-answer govuk-!-padding-top-2">
                                    Based on your type of property, we will assume that you have @(UserDataHelper.HasInsulatedSolidWalls(Model) ? "insulated" : "uninsulated") solid walls
                                </p>                                
                            }
                        }
                    }
                </dd>
                <dd class="govuk-summary-list__actions govuk-!-width-one-quarter">
                    <a class="govuk-link" href="@Url.Action("WallConstruction_Get", "EnergyEfficiency", new {reference = Model.Reference, change = true})">
                        Change<span class="govuk-visually-hidden"> type of walls
                        </span>
                    </a>
                </dd>
            </div>

            @if (Model.WallConstruction == WallConstruction.Cavity ||
                 Model.WallConstruction == WallConstruction.Mixed)
            {
                <div class="govuk-summary-list__row">
                    <dt class="govuk-summary-list__key govuk-!-width-one-quarter">
                        Are your cavity walls insulated? 
                    </dt>
                    <dd class="govuk-summary-list__value govuk-!-width-one-half">
                        @(Model.CavityWallsInsulated?.GetCheckboxLabelText())
                        @if (Model.CavityWallsInsulated == CavityWallsInsulated.DoNotKnow)
                        {
                            if (Model.Epc != null && (Model?.Epc.CavityWallsInsulated != null || Model?.Epc.ConstructionAgeBand != null))
                            {
                                <p class="govuk-body-s sea-assumed-answers">
                                    Based on your Energy Performance Certificate, we will assume that you have @(UserDataHelper.HasInsulatedCavityWalls(Model) ? "insulated" : "uninsulated") cavity walls
                                </p>
                            }
                            else if (Model.YearBuilt.HasValue)
                            {
                                <p class="govuk-body-s sea-assumed-answer govuk-!-padding-top-2">
                                    Based on your type of property, we will assume that you have @(UserDataHelper.HasInsulatedCavityWalls(Model) ? "insulated" : "uninsulated") cavity walls
                                </p>
                            }
                        }
                    </dd>
                    <dd class="govuk-summary-list__actions govuk-!-width-one-quarter">
                        <a class="govuk-link" href="@Url.Action("CavityWallsInsulated_Get", "EnergyEfficiency", new {reference = Model.Reference, change = true})">
                            Change<span class="govuk-visually-hidden"> are cavity walls insulated
                            </span>
                        </a>
                    </dd>
                </div>
            }
            @if (Model.WallConstruction == WallConstruction.Solid ||
                 Model.WallConstruction == WallConstruction.Mixed)
            {
                <div class="govuk-summary-list__row">
                    <dt class="govuk-summary-list__key govuk-!-width-one-quarter">
                        Are your solid walls insulated? 
                    </dt>
                    <dd class="govuk-summary-list__value govuk-!-width-one-half">
                        @(Model.SolidWallsInsulated?.GetCheckboxLabelText())
                        @if (Model.SolidWallsInsulated == SolidWallsInsulated.DoNotKnow)
                        {
                            if (Model.Epc != null && (Model?.Epc.SolidWallsInsulated != null || Model?.Epc.ConstructionAgeBand != null))
                            {
                                <p class="govuk-body-s sea-assumed-answer govuk-!-padding-top-2">
                                    Based on your Energy Performance Certificate, we will assume that you have @(UserDataHelper.HasInsulatedSolidWalls(Model) ? "insulated" : "uninsulated") solid walls
                                </p>
                            }
                            else if (Model.YearBuilt.HasValue)
                            {
                                <p class="govuk-body-s sea-assumed-answer govuk-!-padding-top-1">
                                    Based on your type of property, we will assume that you have @(UserDataHelper.HasInsulatedSolidWalls(Model) ? "insulated" : "uninsulated") solid walls
                                </p>
                            }
                        }
                    </dd>
                    <dd class="govuk-summary-list__actions govuk-!-width-one-quarter">
                        <a class="govuk-link" href="@Url.Action("SolidWallsInsulated_Get", "EnergyEfficiency", new {reference = Model.Reference, change = true})">
                            Change<span class="govuk-visually-hidden"> are solid walls insulated
                            </span>
                        </a>
                    </dd>
                </div>
            }
            
            @if (Model.PropertyType != PropertyType.ApartmentFlatOrMaisonette || Model.FlatType == FlatType.GroundFloor)
            {
                <div class="govuk-summary-list__row">
                    <dt class="govuk-summary-list__key govuk-!-width-one-quarter">
                        Floor construction 
                    </dt>
                    <dd class="govuk-summary-list__value govuk-!-width-one-half">
                        @(Model.FloorConstruction?.GetCheckboxLabelText())
                        @if (Model.FloorConstruction == FloorConstruction.DoNotKnow)
                        {
                            if (Model?.Epc?.FloorConstruction != null || !Model.YearBuilt.HasValue && Model?.Epc?.ConstructionAgeBand != null)
                            {
                                if (UserDataHelper.HasSolidFloor(Model))
                                {
                                    <p class="govuk-body-s sea-assumed-answer govuk-!-padding-top-2">
                                        Based on your Energy Performance Certificate, we will assume that you have an @(UserDataHelper.HasInsulatedFloor(Model) ? "insulated" : "uninsulated") solid concrete floor
                                    </p>
                                }
                                else if (UserDataHelper.HasSuspendedFloor(Model))
                                {
                                    <p class="govuk-body-s sea-assumed-answer govuk-!-padding-top-2">
                                        Based on your Energy Performance Certificate, we will assume that you have an @(UserDataHelper.HasInsulatedFloor(Model) ? "insulated" : "uninsulated") suspended timber floor
                                    </p>
                                }
                            }
                            else if (Model.YearBuilt.HasValue)
                            {
                                if (UserDataHelper.HasSolidFloor(Model))
                                {
                                    <p class="govuk-body-s sea-assumed-answer govuk-!-padding-top-2">
                                        Based on your type of property, we will assume that you have an @(UserDataHelper.HasInsulatedFloor(Model) ? "insulated" : "uninsulated") solid concrete floor
                                    </p>
                                }
                                else if (UserDataHelper.HasSuspendedFloor(Model))
                                {
                                    <p class="govuk-body-s sea-assumed-answer govuk-!-padding-top-2">
                                        Based on your type of property, we will assume that you have an @(UserDataHelper.HasInsulatedFloor(Model) ? "insulated" : "uninsulated") suspended timber floor
                                    </p>                                
                                }
                            }
                        }
                    </dd>
                    <dd class="govuk-summary-list__actions govuk-!-width-one-quarter">
                        <a class="govuk-link" href="@Url.Action("FloorConstruction_Get", "EnergyEfficiency", new {reference = Model.Reference, change = true})">
                            Change<span class="govuk-visually-hidden"> floor construction</span>
                        </a>
                    </dd>
                </div>
                @if (Model.FloorConstruction != FloorConstruction.DoNotKnow && Model.FloorConstruction != FloorConstruction.Other)
                {
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key govuk-!-width-one-quarter">
                            Is your ground floor insulated?
                        </dt>
                        <dd class="govuk-summary-list__value govuk-!-width-one-half">
                            @(Model.FloorInsulated?.GetCheckboxLabelText())
                            @if (Model.FloorInsulated == FloorInsulated.DoNotKnow)
                            {
                                if (Model?.Epc?.FloorConstruction != null || !Model.YearBuilt.HasValue && Model?.Epc?.ConstructionAgeBand != null)
                                {
                                    <p class="govuk-body-s sea-assumed-answer govuk-!-padding-top-2">
                                        Based on your Energy Performance Certificate, we will assume that you have an @(UserDataHelper.HasInsulatedFloor(Model) ? "insulated" : "uninsulated") floor
                                    </p>
                                }
                                else if (Model.YearBuilt.HasValue)
                                {
                                    <p class="govuk-body-s sea-assumed-answer govuk-!-padding-top-1">
                                        Based on your type of property, we will assume that you have an @(UserDataHelper.HasInsulatedFloor(Model) ? "insulated" : "uninsulated") floor
                                    </p>
                                }
                            }
                        </dd>
                        <dd class="govuk-summary-list__actions govuk-!-width-one-quarter">
                            <a class="govuk-link" href="@Url.Action("FloorInsulated_Get", "EnergyEfficiency", new {reference = Model.Reference, change = true})">
                                Change<span class="govuk-visually-hidden"> is floor insulated</span>
                            </a>
                        </dd>
                    </div>
                }
            }

            @if (Model.PropertyType != PropertyType.ApartmentFlatOrMaisonette || Model.FlatType == FlatType.TopFloor)
            {
                <div class="govuk-summary-list__row">
                    <dt class="govuk-summary-list__key govuk-!-width-one-quarter">
                        Is any part of your roof flat? 
                    </dt>
                    <dd class="govuk-summary-list__value govuk-!-width-one-half">
                        @(Model.RoofConstruction?.GetCheckboxLabelText())
                    </dd>
                    <dd class="govuk-summary-list__actions govuk-!-width-one-quarter">
                        <a class="govuk-link" href="@Url.Action("RoofConstruction_Get", "EnergyEfficiency", new {reference = Model.Reference, change = true})">
                            Change<span class="govuk-visually-hidden"> is roof flat</span>
                        </a>
                    </dd>
                </div>
                @if (Model.RoofConstruction != RoofConstruction.Flat)
                {
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key govuk-!-width-one-quarter">
                            Do you have accessible loft space?
                        </dt>
                        <dd class="govuk-summary-list__value govuk-!-width-one-half">
                            @(Model.AccessibleLoftSpace?.GetCheckboxLabelText())
                        </dd>
                        <dd class="govuk-summary-list__actions govuk-!-width-one-quarter">
                            <a class="govuk-link" href="@Url.Action("AccessibleLoftSpace_Get", "EnergyEfficiency", new {reference = Model.Reference, change = true})">
                                Change<span class="govuk-visually-hidden"> accessible loft space</span>
                            </a>
                        </dd>
                    </div>
                    @if (Model.AccessibleLoftSpace == AccessibleLoftSpace.Yes || Model.AccessibleLoftSpace == AccessibleLoftSpace.DoNotKnow)
                    {
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key govuk-!-width-one-quarter">
                                Is your loft fully insulated?
                            </dt>
                            <dd class="govuk-summary-list__value govuk-!-width-one-half">
                                @(Model.RoofInsulated?.GetCheckboxLabelText())
                                @if (Model.RoofInsulated == RoofInsulated.DoNotKnow || Model.AccessibleLoftSpace == AccessibleLoftSpace.DoNotKnow)
                                {
                                    if (Model.YearBuilt.HasValue)
                                    {
                                        <p class="govuk-body-s sea-assumed-answer govuk-!-padding-top-1">
                                            Based on your type of property, we will assume that you @(UserDataHelper.HasRoofInsulation(Model) ? "have " : "do not have") a fully insulated loft
                                        </p>
                                    }
                                }
                            </dd>
                            <dd class="govuk-summary-list__actions govuk-!-width-one-quarter">
                                <a class="govuk-link" href="@Url.Action("RoofInsulated_Get", "EnergyEfficiency", new {reference = Model.Reference, change = true})">
                                    Change<span class="govuk-visually-hidden"> is roof insulated</span>
                                </a>
                            </dd>
                        </div>
                    }
                }
            }

            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key govuk-!-width-one-quarter">
                    Glazing type 
                </dt>
                <dd class="govuk-summary-list__value govuk-!-width-one-half">
                    @(Model.GlazingType?.GetCheckboxLabelText())
                </dd>
                <dd class="govuk-summary-list__actions govuk-!-width-one-quarter">
                    <a class="govuk-link" href="@Url.Action("GlazingType_Get", "EnergyEfficiency", new {reference = Model.Reference, change = true})">
                        Change<span class="govuk-visually-hidden"> type of glazing</span>
                    </a>
                </dd>
            </div>
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key govuk-!-width-one-quarter">
                    Outdoor space for heat pump
                </dt>
                <dd class="govuk-summary-list__value govuk-!-width-one-half">
                    @(Model.HasOutdoorSpace?.GetCheckboxLabelText())
                </dd>
                <dd class="govuk-summary-list__actions govuk-!-width-one-quarter">
                    <a class="govuk-link" href="@Url.Action("OutdoorSpace_Get", "EnergyEfficiency", new {reference = Model.Reference, change = true})">
                        Change<span class="govuk-visually-hidden"> outdoor space</span>
                    </a>
                </dd>
            </div>
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key govuk-!-width-one-quarter">
                    Heating system 
                </dt>
                <dd class="govuk-summary-list__value govuk-!-width-one-half">
                    @{
                        var heatingTypeText = "";
                        if (Model.HeatingType == HeatingType.Other)
                        {
                            heatingTypeText = $"{Model.HeatingType?.GetCheckboxLabelText()} - {Model?.OtherHeatingType?.GetCheckboxLabelText()}";
                        }
                        else
                        {
                            heatingTypeText = Model.HeatingType?.GetCheckboxLabelText();
                        }
                        <span>@(heatingTypeText)</span>
                    }
                </dd>
                <dd class="govuk-summary-list__actions govuk-!-width-one-quarter">
                    <a class="govuk-link" href="@Url.Action("HeatingType_Get", "EnergyEfficiency", new {reference = Model.Reference, change = true})">
                        Change<span class="govuk-visually-hidden"> how you heat your home</span>
                    </a>
                </dd>
            </div>
            
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key govuk-!-width-one-quarter">
                    Hot water cylinder 
                </dt>
                <dd class="govuk-summary-list__value govuk-!-width-one-half">
                    @if (Model.HasHotWaterCylinder.HasValue)
                    {
                        @(Model.HasHotWaterCylinder?.GetCheckboxLabelText())
                    }
                    else
                    {
                        if (Model.HeatingType == HeatingType.GasBoiler ||
                            Model.HeatingType == HeatingType.OilBoiler ||
                            Model.HeatingType == HeatingType.LpgBoiler)
                        {
                            @(Model.HasHotWaterCylinder?.GetCheckboxLabelText())
                        }
                        else
                        {
                            @:Yes
                        }
                    }
                </dd>
                <dd class="govuk-summary-list__actions govuk-!-width-one-quarter">
                    <a class="govuk-link" href="@Url.Action("HotWaterCylinder_Get", "EnergyEfficiency", new {reference = Model.Reference, change = true})">
                        Change<span class="govuk-visually-hidden"> do you have a hot water cylinder</span>
                    </a>
                </dd>
            </div>
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key govuk-!-width-one-quarter">
                    Size of household 
                </dt>
                <dd class="govuk-summary-list__value govuk-!-width-one-half">
                    @(Model.NumberOfOccupants?.ToString() ?? "Question skipped")
                </dd>
                <dd class="govuk-summary-list__actions govuk-!-width-one-quarter">
                    <a class="govuk-link" href="@Url.Action("NumberOfOccupants_Get", "EnergyEfficiency", new {reference = Model.Reference, change = true})">
                        Change<span class="govuk-visually-hidden"> number of people over 5 in the home</span>
                    </a>
                </dd>
            </div>
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key govuk-!-width-one-quarter">
                    Heating pattern
                </dt>
                <dd class="govuk-summary-list__value govuk-!-width-one-half">
                    @{
                        var heatingPatternText = "";
                        if (Model.HeatingPattern == HeatingPattern.Other)
                        {
                            heatingPatternText = $"{Model.HeatingPattern?.GetCheckboxLabelText()} - {Model?.HoursOfHeating.ToString()} hours";
                        }
                        else
                        {
                            heatingPatternText = Model.HeatingPattern?.GetCheckboxLabelText();
                        }
                        <span>@(heatingPatternText)</span>
                    }
                </dd>
                <dd class="govuk-summary-list__actions govuk-!-width-one-quarter">
                    <a class="govuk-link" href="@Url.Action("HeatingPattern_Get", "EnergyEfficiency", new {reference = Model.Reference, change = true})">
                        Change<span class="govuk-visually-hidden"> heating pattern</span>
                    </a>
                </dd>
            </div>
        <div class="govuk-summary-list__row">
            <dt class="govuk-summary-list__key govuk-!-width-one-quarter">
                Temperature
            </dt>
            <dd class="govuk-summary-list__value govuk-!-width-one-half">
                @(Model.Temperature.HasValue ? Model.Temperature.Value + "°C" : "Question skipped")
            </dd>
            <dd class="govuk-summary-list__actions govuk-!-width-one-quarter">
                <a class="govuk-link" href="@Url.Action("Temperature_Get", "EnergyEfficiency", new {reference = Model.Reference, change = true})">
                    Change<span class="govuk-visually-hidden"> temperature</span>
                </a>
            </dd>
        </div>

        </dl>

        <a href="@Url.Action("YourRecommendations_Get", "EnergyEfficiency", new {reference = Model.Reference})" role="button" draggable="false" class="govuk-button govuk-!-margin-top-2 govuk-!-margin-bottom-8 govuk-button--start" data-module="govuk-button">
            See results
            <svg class="govuk-button__start-icon" xmlns="http://www.w3.org/2000/svg" width="17.5" height="19" viewBox="0 0 33 40" aria-hidden="true" focusable="false">
                <path fill="currentColor" d="M0 0h13l20 20-20 20H0l20-20z"/>
            </svg>
        </a>
    </div>
</div>