@using GovUkDesignSystem
@using GovUkDesignSystem.GovUkDesignSystemComponents
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using SeaPublicWebsite.BusinessLogic.Models.Enums
@using SeaPublicWebsite.Controllers
@using Microsoft.AspNetCore.Mvc.Localization
@inject IHtmlLocalizer<SharedResources> SharedLocalizer

@model SeaPublicWebsite.Models.EnergyEfficiency.FloorConstructionViewModel
@{
    ViewBag.Title = @SharedLocalizer["Floor Construction"].Value;
}

@section BeforeMain {
    @await Html.GovUkBackLink(new BackLinkViewModel
           {
               Text = @SharedLocalizer["Back"].Value,
               Href = Model.BackLink,
           })
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        
        <form action="@Url.Action(nameof(EnergyEfficiencyController.FloorConstruction_Post), "EnergyEfficiency", new {reference = Model.Reference})" method="post" novalidate>
            @Html.AntiForgeryToken()
            @(Html.HiddenFor(m => m.EntryPoint))
            
            @{
                Func<object, object> details = 
                    @<text>
                        <p class="govuk-body">
                            @SharedLocalizer["If you have a basement or cellar beneath your house that you can get into safely, you could look down there to see what type of floor you have. If the floor is a suspended wooden floor, you should be able to see wooden joists and the undersides of the floorboards."]
                        </p>
                        <p class="govuk-body">
                            @SharedLocalizer["If you don’t have access to the space underneath your house, you will need to lift a corner of the carpet and underlay to have a look."]
                        </p>
                     </text>;
                
                Func<object, object> blueBannerHint = null;
                if (Model.Epc?.FloorConstruction is not null)
                {
                    blueBannerHint = 
                        @<p class="govuk-body">
                            @SharedLocalizer[$"Your 2013 Energy Performance Certificate suggests your home has"]
                            <strong>
                                @(Model.Epc?.FloorConstruction switch {
                                    FloorConstruction.SuspendedTimber => @SharedLocalizer["EPCSuggestsSuspendedTimberFloorString", Model.Epc.LodgementYear],
                                    FloorConstruction.SolidConcrete => @SharedLocalizer["EPCSuggestsSolidConcreteFloorString", Model.Epc.LodgementYear],
                                    FloorConstruction.Mix => @SharedLocalizer["EPCSuggestsBothSuspendedTimberAndSolidConcreteFloorString", Model.Epc.LodgementYear],
                                    FloorConstruction.Other => @SharedLocalizer["EPCSuggestsAnotherTypeOfFloorString", Model.Epc.LodgementYear],
                                    _ => throw new ArgumentOutOfRangeException()})
                            </strong>
                        </p>;
                } else if (Model.HintSuspendedTimber is not null)
                {
                    blueBannerHint =
                        @<p class="govuk-body">
                            @(Model.HintSuspendedTimber is true ? SharedLocalizer["HomesOfYourTypeTypicallyHaveASuspendedTimberFloorString"] : SharedLocalizer["HomesOfYourTypeTypicallyHaveASolidConcreteFloorString"])
                        </p>;
                }
            }
            
            @(await Html.GovUkRadiosFor(m => m.FloorConstruction,
                fieldsetOptions: new FieldsetViewModel
                {
                    Legend = new LegendViewModel
                    {
                        Text = @SharedLocalizer["How is your ground floor built?"].Value,
                        Classes = "govuk-fieldset__legend--l",
                        IsPageHeading = true
                    }
                },
                new HintViewModel
                {
                    Html = @<text>
                               <p class="govuk-body">
                                   @SharedLocalizer["Many homes have a ground floor made of solid concrete."]  
                               </p>
                               <p class="govuk-body">
                                   @SharedLocalizer["Older homes are more likely to have suspended timber floors. If you have air bricks or ventilation bricks on the outside wall of your house that are below floor level, you probably have a suspended timber floor."] 
                               </p>
                               <p class="govuk-body">
                                   @SharedLocalizer["You may have both types, for example, if there’s a modern extension to a pre-1950 property."]
                               </p>
                               
                               @await Html.GovUkDetails(new DetailsViewModel
                                      {
                                          SummaryText = @SharedLocalizer["Help me answer this question"].Value,
                                          Html = details
                                      })
                               
                               @if (blueBannerHint is not null)
                               {
                                   @await Html.GovUkInsetText(new InsetTextViewModel
                                          {
                                              Classes = "sea-epc-hint",
                                              Html = blueBannerHint
                                          })
                               }
                            </text>
                },
                radioHints: new Dictionary<FloorConstruction, HintViewModel>
                {
                    {
                        FloorConstruction.Other,
                        new HintViewModel
                        {
                            Text = @SharedLocalizer["Other ground floor construction types include suspended concrete, flagstones or non-traditional build types."].Value
                        }
                    }
                }))

            @await Html.GovUkButton(new ButtonViewModel
                   {
                       Text = @SharedLocalizer["Continue"].Value
                   })
            
        </form>
        
    </div>
    <div class="govuk-grid-column-one-third">
        @await Html.PartialAsync("/Views/EnergyEfficiency/Partials/_AdditionalSupport.cshtml")
    </div>
</div>