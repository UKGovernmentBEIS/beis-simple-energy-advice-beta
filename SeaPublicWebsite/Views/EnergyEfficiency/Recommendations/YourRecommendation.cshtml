@using GovUkDesignSystem
@using GovUkDesignSystem.GovUkDesignSystemComponents
@using SeaPublicWebsite.Controllers
@using SeaPublicWebsite.Models.EnergyEfficiency
@model SeaPublicWebsite.Models.EnergyEfficiency.RecommendationViewModel;

@{
    ViewBag.Title = "Recommendation " + (Model.RecommendationIndex + 1) + " of " + Model.PropertyRecommendations.Count;
    Layout = "_Layout";
}

@section BeforeMain {
    @await Html.GovUkBackLink(new BackLinkViewModel
           {
               Text = "Back",
               Href = Model.BackLink
           })
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-one-third">
        @{ await Html.RenderPartialAsync("Partials/_YourActionPlan.cshtml", Model); }
    </div>

    <div class="govuk-grid-column-two-thirds">
        <form action="@Url.Action(nameof(EnergyEfficiencyController.Recommendation_Post), "EnergyEfficiency", new { id = (int)Model.GetCurrentPropertyRecommendation().Key })" method="post" novalidate>

            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.FromActionPlan)

            @{ await Html.RenderPartialAsync("Partials/_SingleRecommendationDetails.cshtml", new SingleRecommendationDetailsViewModel
               {
                   RecommendationIndex = Model.RecommendationIndex,
                   PropertyRecommendations = Model.PropertyRecommendations
               });
            }

            @(await Html.GovUkRadiosFor(m => m.RecommendationAction,
                fieldsetOptions: new FieldsetViewModel
                {
                    Legend = new LegendViewModel
                    {
                        Html = @<h1 class="govuk-fieldset__heading">
                                   Would you consider this improvement for your property?
                               </h1>,
                        Classes = "govuk-fieldset__legend--l",
                    }
                },
                classes: "govuk-!-margin-bottom-7"
                ))

            @{
                var hasBack = Model.HasPreviousIndex() && !Model.FromActionPlan;
                await Html.RenderPartialAsync("Partials/_ActionButtons.cshtml", new ActionButtonsViewModel
                {
                    BackTitle = hasBack ? "Go back to" : null,
                    BackText = hasBack ? $"Recommendation {Model.RecommendationIndex}" : null,
                    ForwardTitle = Model.FromActionPlan ? "Back to" : "Continue to",
                    ForwardText = Model.FromActionPlan
                        ? "Action Plan"
                        : Model.HasNextIndex()
                            ? $"Recommendation {Model.RecommendationIndex + 2}"
                            : "Action Plan"
                });
            }
        </form>
    </div>
</div>
