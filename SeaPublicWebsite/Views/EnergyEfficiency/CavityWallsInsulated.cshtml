@using GovUkDesignSystem
@using GovUkDesignSystem.GovUkDesignSystemComponents
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using SeaPublicWebsite.BusinessLogic.Models.Enums
@using SeaPublicWebsite.Controllers
@using Microsoft.AspNetCore.Mvc.Localization
@inject IHtmlLocalizer<SharedResources> SharedLocalizer

@model SeaPublicWebsite.Models.EnergyEfficiency.CavityWallsInsulatedViewModel
@{
    ViewBag.Title = @SharedLocalizer["Cavity Walls Insulated"];
}

@section BeforeMain {
    @await Html.GovUkBackLink(new BackLinkViewModel
           {
               Text = @SharedLocalizer["Back"].Value,
               Href = Model.BackLink,
           })
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        
        <form action="@Url.Action(nameof(EnergyEfficiencyController.CavityWallsInsulated_Post), "EnergyEfficiency", new {reference = Model.Reference})" method="post" novalidate>
            @(Html.HiddenFor(m => m.EntryPoint))
            @Html.AntiForgeryToken()
            
            @{
                Func<object, object> details = 
                    @<text>
                        @if (Model.YearBuilt is >= YearBuilt.From1996To2011)
                        {
                            <p class="govuk-body">
                                @SharedLocalizer["Homes built after 1991 were typically built with insulating material between the outer and inner walls."] 
                            </p>
                            <p class="govuk-body">
                                @SharedLocalizer["If your home was converted, for example it was a shop or other commercial premises before, it may have been built without insulation."]
                            </p>
                        }
                        else
                        {
                            <p class="govuk-body">
                                @SharedLocalizer["Many cavity walls can be insulated by injecting insulation material into the cavity from the outside. A specialist company will drill holes in the outside walls, inject insulation through the holes and then seal them with cement."]
                            </p>
                            <p class="govuk-body">
                                @SharedLocalizer["If there are small, filled 22 millimetre holes at regular intervals around the outside walls, it’s a sign they may have been insulated."]
                            </p>
                        }
                     </text>;
                
                Func<object, object> blueBannerHint = null;
                if (Model.Epc?.CavityWallsInsulated is not null)
                {
                    blueBannerHint = 
                        @<p class="govuk-body">
                            @SharedLocalizer[$"Your {Model.Epc.LodgementYear} Energy Performance Certificate suggests"]
                            <strong>
                                @(Model.Epc?.CavityWallsInsulated switch {
                                    CavityWallsInsulated.No => @SharedLocalizer["your cavity walls are not insulated."],
                                    CavityWallsInsulated.Some => @SharedLocalizer["some of your cavity walls are insulated."],
                                    CavityWallsInsulated.All => @SharedLocalizer["your cavity walls are insulated."],
                                    _ => throw new ArgumentOutOfRangeException()})
                            </strong>
                        </p>;
                } else if (Model.HintUninsulatedCavityWalls is not null)
                {
                    blueBannerHint =
                        @<p class="govuk-body">
                            @SharedLocalizer["Homes of your type typically have"]
                            <strong>
                                @(Model.HintUninsulatedCavityWalls is true ? @SharedLocalizer["uninsulated cavity walls."] : @SharedLocalizer["insulated cavity walls."])
                            </strong>
                        </p>;
                }
            }
            
            @(await Html.GovUkRadiosFor(m => m.CavityWallsInsulated,
                fieldsetOptions: new FieldsetViewModel
                {
                    Legend = new LegendViewModel
                    {
                        Text = SharedLocalizer["Are your cavity walls insulated?"].Value,
                        Classes = "govuk-fieldset__legend--l",
                        IsPageHeading = true
                    }
                },
                hintOptions: new HintViewModel
                {
                    Html = @<text>
                               <p class="govuk-body">
                                   @SharedLocalizer["Cavity walls built before 1991 are typically uninsulated, unless you or someone before you had insulation installed."]
                               </p>
                               <p class="govuk-body">
                                   @SharedLocalizer["Cavity walls built after 1991 were typically built with insulating material between the outer and inner walls."]
                               </p>

                               @await Html.GovUkDetails(new DetailsViewModel
                                      {
                                          SummaryText = @SharedLocalizer["Help me answer this question"].Value,
                                          Html = details
                                      })

                               @if (blueBannerHint is not null)
                               {
                                   @await Html.GovUkInsetText(new InsetTextViewModel
                                          {
                                              Classes = "sea-epc-hint",
                                              Html = blueBannerHint
                                          })
                               }
                            </text>
                }))

            @await Html.GovUkButton(new ButtonViewModel
                   {
                       Text = SharedLocalizer["Continue"].Value
                   })
            
        </form>
        
    </div>
    <div class="govuk-grid-column-one-third">
        @await Html.PartialAsync("/Views/EnergyEfficiency/Partials/_AdditionalSupport.cshtml")
    </div>
</div>