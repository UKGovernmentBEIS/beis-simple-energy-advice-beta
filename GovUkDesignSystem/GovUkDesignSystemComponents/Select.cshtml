@using GovUkDesignSystem.Helpers
@model GovUkDesignSystem.GovUkDesignSystemComponents.SelectViewModel

<div class="govuk-form-group @(Model.FormGroup?.Classes) @(Model.ErrorMessage != null ? "govuk-form-group--error" : "")">
    @{
        string describedBy = Model.DescribedBy;
        if (Model.Label != null)
        {
            Model.Label.For = Model.Id;
            await Html.RenderPartialAsync("/GovUkDesignSystemComponents/Label.cshtml", Model.Label);
        }
        if (Model.Hint != null)
        {
            Model.Hint.Id = $"{Model.Id}-hint";
            describedBy += $" {Model.Hint.Id}";
            await Html.RenderPartialAsync("/GovUkDesignSystemComponents/Hint.cshtml", Model.Hint);
        }
        if (Model.ErrorMessage != null)
        {
            Model.ErrorMessage.Id = $"{Model.Id}-error";
            describedBy += $" {Model.ErrorMessage.Id}";
            await Html.RenderPartialAsync("/GovUkDesignSystemComponents/ErrorMessage.cshtml", Model.ErrorMessage);
        }
    }
    <select class="govuk-select @(Model.Classes) @(Model.ErrorMessage != null ? "govuk-select--error" : "")"
            id="@(Model.Id)"
            name="@(Model.Name)"
            aria-describedby="@(describedBy?.Trim())"
            @(Html.Raw(Model.Attributes.ToTagAttributes()))>
        @foreach (var item in Model.Items)
        {
            <option value="@(item.Value)"
                    @(item.Selected ? "selected" : "")
                    @(item.Disabled ? "disabled" : "")
                    @(Html.Raw(item.Attributes.ToTagAttributes()))>
                @(item.Text)
            </option>
        }
    </select>
</div>