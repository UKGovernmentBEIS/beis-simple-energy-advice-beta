@using GovUkDesignSystem
@using GovUkDesignSystem.GovUkDesignSystemComponents
@using SeaPublicWebsite.Helpers
@using SeaPublicWebsite.Models.EnergyEfficiency
@using SeaPublicWebsite.Models.EnergyEfficiency.QuestionOptions
@model SeaPublicWebsite.Models.EnergyEfficiency.ConfirmAddressViewModel
@{
    ViewBag.Title = "Confirm your address";
}

@section BeforeMain {
    @await Html.GovUkBackLink(new BackLinkViewModel
    {
        Text = "Back",
        Href = Model.BackLink,
        
        // Note: some of the "Back" links in this journey can't use the default browser behaviour
        //  so we should control all of them explicitly
        OverrideWithJavascript = false
    })
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <form action="@Url.Action("ConfirmAddress_Post", "EnergyEfficiency", new {reference = Model.Reference})" method="post" novalidate>

            @Html.AntiForgeryToken()
            @if (Model.EpcInformationList.Count == 1)
            {
                @Html.HiddenFor(m => m.SelectedEpcId)
                <h1 class="govuk-heading-l">
                    Is this your address?
                </h1>

                <dl class="govuk-summary-list govuk-!-margin-bottom-9">
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            Address
                        </dt>
                        <dd class="govuk-summary-list__value">
                            @(Model.EpcInformationList[0].Address1)<br/>
                            @if (!string.IsNullOrWhiteSpace(Model.EpcInformationList[0].Address2))
                            {
                                @(Model.EpcInformationList[0].Address2)
                                <br/>
                            }
                            @(Model.EpcInformationList[0].Postcode)
                        </dd>
                        <dd class="govuk-summary-list__actions">
                            <a class="govuk-link" href="@Url.Action("AskForPostcode_Get", "EnergyEfficiency", new {reference = Model.Reference})">
                                Change<span class="govuk-visually-hidden"> address</span>
                            </a>
                        </dd>
                    </div>
                </dl>
            }
            else
            {
                string error = null;
                foreach (var (_, value) in ViewData.ModelState)
                {
                    if (value.Errors.Count > 0)
                    {
                        error = value.Errors[0].ErrorMessage;
                        break;
                    }
                }
                
                ErrorMessageViewModel errorMessageViewModel = error != null ? new ErrorMessageViewModel {Text = error} : null;
                
                @await Html.GovUkRadios(new RadiosViewModel()
                {
                    Name = nameof(ConfirmAddressViewModel.SelectedEpcId),
                    Fieldset = new FieldsetViewModel
                    {
                        Legend = new LegendViewModel
                        {
                            Html = @<text>
                                       <h1 class="govuk-fieldset__heading">
                                           Select your address
                                       </h1>
                                    </text>,
                            Classes = "govuk-fieldset__legend--l"
                        }
                    },
                    Items = Model.EpcInformationList.Select(epc =>
                    {
                        string fieldName = nameof(ConfirmAddressViewModel.SelectedEpcId);
                        string fieldValue = epc.EpcId;
                        string fieldId = $"{fieldName}_{fieldValue}";

                        return (ItemViewModel) new RadioItemViewModel
                        {
                            Name = fieldName,
                            Value = fieldValue.ToString(),
                            Id = fieldId,
                            Checked = Model.SelectedEpcId == fieldValue,
                            Label = new LabelViewModel
                            {
                                Text = epc.Address1 + (epc.Address2 != "" ? ", " + epc.Address2 : ""),
                                For = fieldId
                            }
                        };
                    })
                        .ToList(),
                    ErrorMessage = errorMessageViewModel
                })
                ;
            }

            <div class="govuk-button-group">
                @(await Html.GovUkButton(new ButtonViewModel
                {
                    Text = (Model.EpcInformationList.Count == 1 ? "Yes, continue" : "Continue"),

                }))
                <a href=@Url.Action("PropertyType_Get", "EnergyEfficiency", new {reference = Model.Reference})
                   class="govuk-link">
                    @(Model.EpcInformationList.Count == 1 ? "No, skip this question" : "Address not listed above")
                </a>
            </div>

        </form>
    </div>
</div>
