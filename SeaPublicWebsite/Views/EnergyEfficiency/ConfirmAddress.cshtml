@using GovUkDesignSystem
@using GovUkDesignSystem.GovUkDesignSystemComponents
@using SeaPublicWebsite.Helpers
@using SeaPublicWebsite.Models.EnergyEfficiency
@using SeaPublicWebsite.Models.EnergyEfficiency.QuestionOptions
@model SeaPublicWebsite.Models.EnergyEfficiency.ConfirmAddressViewModel
@{
    ViewBag.Title = "Confirm your address";
}

@section BeforeMain {
    @await Html.GovUkBackLink(new BackLinkViewModel
    {
        Text = "Back",
        Href = Model.BackLink,
        
        // Note: some of the "Back" links in this journey can't use the default browser behaviour
        //  so we should control all of them explicitly
        OverrideWithJavascript = false
    })
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        @if (!Model.EpcInformationList.Any())
        {
            <h1 class="govuk-heading-l">
                We could not find an EPC for this address
            </h1>
        
            <p class="govuk-body">
                We were unable to find an EPC for this address or all previous EPCs have expired.
            </p>
        
            <p class="govuk-body">
                You can still continue using the service.
            </p>

            @await Html.GovUkButton(new ButtonViewModel
            {
                Href = Url.Action("PropertyType_Get", "EnergyEfficiency", new {reference = Model.Reference}),
                Text = "Continue"
            })
        }
        else
        {
            <form action="@Url.Action("ConfirmAddress_Post", "EnergyEfficiency", new { reference = Model.Reference })" method="post" novalidate>

                @Html.AntiForgeryToken()
                @if (Model.EpcInformationList.Count == 1)
                {
                    @Html.HiddenFor(m => m.SelectedEpcId)
                    <h1 class="govuk-heading-l">
                        Is this your address?
                    </h1>

                    @await Html.GovUkSummaryList(new SummaryListViewModel
                    {
                        Rows = new List<SummaryListRowViewModel>
                        {
                            new()
                            {
                                Key = new()
                                {
                                    Text = "Address"
                                },
                                Value = new()
                                {
                                    Html = @<text>
                                               @(Model.EpcInformationList[0].Address1)<br/>
                                               @if (!string.IsNullOrWhiteSpace(Model.EpcInformationList[0].Address2))
                                               {
                                                   @(Model.EpcInformationList[0].Address2)
                                                   <br/>
                                               }
                                               @(Model.EpcInformationList[0].Postcode)
                                            </text>
                                },
                                Actions = new SummaryListRowActionViewModel
                                {
                                    Items = new List<SummaryListRowActionItemViewModel>
                                    {
                                        new()
                                        {
                                            Html = @<text>
                                                       Change<span class="govuk-visually-hidden"> address</span>
                                                    </text>,
                                            Href = @Url.Action("AskForPostcode_Get", "EnergyEfficiency", new { reference = Model.Reference })
                                        }
                                    }
                                }
                            }

                        }
                    })
                }
                else
                {
                    @await Html.GovUkRadiosFromStringsFor(m => m.SelectedEpcId,
                        radioOptions: Model.EpcInformationList.ToDictionary(
                            epc => epc.EpcId,
                            epc => new LabelViewModel
                            {
                                Text = epc.Address1 + (epc.Address2 != "" ? ", " + epc.Address2 : "")
                            }),
                        fieldsetOptions: new FieldsetViewModel
                        {
                            Legend = new LegendViewModel
                            {
                                Html = @<text>
                                           <h1 class="govuk-fieldset__heading">
                                               Select your address
                                           </h1>
                                        </text>,
                                Classes = "govuk-fieldset__legend--l"
                            }
                        })
                }

                <div class="govuk-button-group">
                    @(await Html.GovUkButton(new ButtonViewModel
                    {
                        Text = (Model.EpcInformationList.Count == 1 ? "Yes, continue" : "Continue"),

                    }))
                    <a href=@Url.Action("PropertyType_Get", "EnergyEfficiency", new { reference = Model.Reference })
                       class="govuk-link">
                        @(Model.EpcInformationList.Count == 1 ? "No, skip this question" : "Address not listed above")
                    </a>
                </div>
                
            </form>
        }
    </div>
</div>
