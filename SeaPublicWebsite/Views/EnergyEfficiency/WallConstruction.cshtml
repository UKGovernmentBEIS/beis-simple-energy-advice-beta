@using GovUkDesignSystem
@using GovUkDesignSystem.GovUkDesignSystemComponents
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using SeaPublicWebsite.BusinessLogic.Models.Enums
@using SeaPublicWebsite.Controllers
@using Microsoft.AspNetCore.Mvc.Localization
@inject IHtmlLocalizer<SharedResources> SharedLocalizer

@model SeaPublicWebsite.Models.EnergyEfficiency.WallConstructionViewModel;
@{
    ViewBag.Title = SharedLocalizer["Wall Construction"].Value;
}

@section BeforeMain {
    @await Html.GovUkBackLink(new BackLinkViewModel
           {
               Text = SharedLocalizer["Back"].Value,
               Href = Model.BackLink,
           })
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        
        <form action="@Url.Action(nameof(EnergyEfficiencyController.WallConstruction_Post), "EnergyEfficiency", new {reference = Model.Reference})" method="post" novalidate>
            @(Html.HiddenFor(m => m.EntryPoint))
            @Html.AntiForgeryToken()
            
            @{
                Func<object,object> details = 
                    @<text>
                        <p class="govuk-body">
                            @SharedLocalizer["Solid brick walls will have an alternating pattern, with some bricks laid across the wall so you can see the smaller ends from the outside."]
                        </p>
                        <p class="govuk-body">
                            @SharedLocalizer["If your home has cavity walls, the bricks typically have an even pattern with all bricks laid lengthways."]
                        </p>
                        <p class="govuk-body">
                            @SharedLocalizer["If the brickwork has been covered, you may be able to tell by measuring the width of the wall. Measure the depth of the wall by a window or door on one of your external walls."]
                        </p>
                        <p class="govuk-body">
                            @SharedLocalizer["If a brick wall is more than 260mm thick, then it is probably a cavity wall."]
                        </p>
                        <p class="govuk-body">
                            @SharedLocalizer["A narrower wall is probably a solid wall. Stone walls may be thicker still but are usually solid."]
                        </p>
                     </text>;

                Func<object, object> blueBannerHint = null;
                if (Model.Epc?.WallConstruction is not null)
                {
                    blueBannerHint = 
                        @<p class="govuk-body">
                            <strong>
                                @(Model.Epc?.WallConstruction switch {
                                    WallConstruction.Solid => SharedLocalizer["EPCSuggestsYourHomeHasSolidWallsString", Model.Epc.LodgementYear],
                                    WallConstruction.Cavity => SharedLocalizer["EPCSuggestsYourHomeHasCavityWallsString", Model.Epc.LodgementYear],
                                    WallConstruction.Mixed => SharedLocalizer["EPCSuggestsYourHomeHasAMixOfSolidAndCavityWallsString", Model.Epc.LodgementYear],
                                    WallConstruction.Other => SharedLocalizer["EPCSuggestsAnotherTypeOfFloorString", Model.Epc.LodgementYear],
                                    _ => throw new ArgumentOutOfRangeException()})
                            </strong>
                        </p>;
                } else if (Model.HintSolidWalls is not null)
                {
                    blueBannerHint =
                        @<p class="govuk-body">
                            @(Model.HintSolidWalls is true ? SharedLocalizer["HomesOfYourTypeTypicallyHaveSolidWallsString"] : SharedLocalizer["HomesOfYourTypeTypicallyHaveCavityWallsString"])
                        </p>;
                }
            }
            @(await Html.GovUkRadiosFor(m => m.WallConstruction,
                fieldsetOptions: new FieldsetViewModel
                {
                    Legend = new LegendViewModel
                    {
                        Text = @SharedLocalizer["What kind of walls does your property have?"].Value,
                        Classes = "govuk-fieldset__legend--l",
                        IsPageHeading = true
                    }
                },
                hintOptions: new HintViewModel
                {
                    Html = @<text>
                               <p class="govuk-body">
                                   @SharedLocalizer["Solid walls may be made from brick or stone. If your home was built before 1930, it’s likely to have solid walls."]
                               </p>
                               <p class="govuk-body">
                                    @SharedLocalizer["Most homes built after 1930 have cavity walls. Cavity walls have a gap, or cavity, between the wall outside and wall inside."] 
                               </p>
                               <p class="govuk-body">
                                    @SharedLocalizer["You may have both types. For example, you have a pre-1930 home with an extension built later than 1930."]
                               </p>
                               
                               @await Html.GovUkDetails(new DetailsViewModel
                                      {
                                          SummaryText = @SharedLocalizer["Help me choose which wall type I have"].Value,
                                          Html = details
                                      })

                               @if (blueBannerHint is not null)
                               {
                                   @await Html.GovUkInsetText(new InsetTextViewModel
                                          {
                                              Classes = "sea-epc-hint",
                                              Html = blueBannerHint
                                          })
                               }
                            </text>
                },
                radioHints: new Dictionary<WallConstruction, HintViewModel>
                {
                    {
                        WallConstruction.Other,
                        new HintViewModel
                        {
                            Text = @SharedLocalizer["Other wall types could include cob walls, timber framed, system built, steel framed or other non-traditional build types"].Value
                        }
                    }
                }))

            @await Html.GovUkButton(new ButtonViewModel
                   {
                       Text = @SharedLocalizer["Continue"].Value
                   })
            
        </form>
        
    </div>
    <div class="govuk-grid-column-one-third">
        @await Html.PartialAsync("/Views/EnergyEfficiency/Partials/_AdditionalSupport.cshtml")
    </div>
</div>