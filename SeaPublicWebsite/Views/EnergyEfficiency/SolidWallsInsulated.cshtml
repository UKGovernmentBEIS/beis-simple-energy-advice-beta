@using GovUkDesignSystem
@using GovUkDesignSystem.GovUkDesignSystemComponents
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using SeaPublicWebsite.BusinessLogic.Models.Enums
@using SeaPublicWebsite.Controllers
@using Microsoft.AspNetCore.Mvc.Localization
@inject IHtmlLocalizer<SharedResources> SharedLocalizer

@model SeaPublicWebsite.Models.EnergyEfficiency.SolidWallsInsulatedViewModel
@{
    ViewBag.Title = @SharedLocalizer["Solid Walls Insulated"];
}

@section BeforeMain {
    @await Html.GovUkBackLink(new BackLinkViewModel
           {
               Text = @SharedLocalizer["Back"].Value,
               Href = Model.BackLink,
           })
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        
        <form action="@Url.Action(nameof(EnergyEfficiencyController.SolidWallsInsulated_Post), "EnergyEfficiency", new {reference = Model.Reference})" method="post" novalidate>
            @Html.AntiForgeryToken()
            @(Html.HiddenFor(m => m.EntryPoint))
            
            @{
                Func<object, object> details = 
                    @<text>
                        <p class="govuk-body">
                            @SharedLocalizer["Solid walls are more common in pre-1930 buildings and these were typically built without insulation."]
                        </p>
                        <p class="govuk-body"> 
                            @SharedLocalizer["If you have solid walls, it’s unlikely they are insulated."]
                        </p>
                     </text>;
                
                Func<object, object> blueBannerHint = null;
                if (Model.Epc?.SolidWallsInsulated is not null)
                {
                    blueBannerHint = 
                        @<p class="govuk-body">
                            @SharedLocalizer[$"Your {Model.Epc.LodgementYear} Energy Performance Certificate suggests"]
                            <strong>
                                @(Model.Epc?.SolidWallsInsulated switch {
                                    SolidWallsInsulated.No => @SharedLocalizer["your solid walls are uninsulated."],
                                    SolidWallsInsulated.Some => @SharedLocalizer["some of your solid walls are insulated."],
                                    SolidWallsInsulated.All => @SharedLocalizer["your solid walls are insulated."],
                                    _ => throw new ArgumentOutOfRangeException()})
                            </strong>
                        </p>;
                } else
                {
                    blueBannerHint =
                        @<p class="govuk-body">
                            @SharedLocalizer["Homes of your type typically have <strong>uninsulated solid walls</strong>"]
                        </p>;
                }
            }
            
            @(await Html.GovUkRadiosFor(m => m.SolidWallsInsulated,
                fieldsetOptions: new FieldsetViewModel
                {
                    Legend = new LegendViewModel
                    {
                        Text = @SharedLocalizer["Are your solid walls insulated?"].Value,
                        Classes = "govuk-fieldset__legend--l",
                        IsPageHeading = true
                    }
                },
                hintOptions: new HintViewModel
                {
                    Html = @<text>
                               <p class="govuk-body">
                                   @SharedLocalizer["Solid wall insulation may be installed internally, inside your home, or externally, on the outside walls."]
                               </p>
                               
                               @await Html.GovUkDetails(new DetailsViewModel
                                      {
                                          SummaryText = @SharedLocalizer["Help me answer this question"].Value,
                                          Html = details
                                      })
                               
                               @await Html.GovUkInsetText(new InsetTextViewModel
                                      {
                                          Classes = "sea-epc-hint",
                                          Html = blueBannerHint
                                      })
                            </text>
                }))

            @await Html.GovUkButton(new ButtonViewModel
                   {
                       Text = @SharedLocalizer["Continue"].Value
                   })
            
        </form>
        
    </div>
    <div class="govuk-grid-column-one-third">
        @await Html.PartialAsync("/Views/EnergyEfficiency/Partials/_AdditionalSupport.cshtml")
    </div>
</div>